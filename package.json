{
  "dependencies": {
    "@devextreme/runtime": "2.3.14",
    "devexpress-diagram": "2.1.47",
    "devexpress-gantt": "4.0.12",
    "devextreme": "21.2.6",
    "devextreme-quill": "1.5.12",
    "devextreme-react": "21.2.6",
    "es6-object-assign": "1.1.0",
    "inferno": "7.4.11",
    "inferno-clone-vnode": "7.4.11",
    "inferno-compat": "7.4.11",
    "inferno-create-class": "7.4.11",
    "inferno-create-element": "7.4.11",
    "inferno-dom": "latest",
    "inferno-extras": "7.4.11",
    "inferno-hydrate": "7.4.11",
    "jszip": "3.7.1",
    "luxon": "1.28.0",
    "prop-types": "15.8.1",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "rrule": "2.6.6",
    "whatwg-fetch": "3.6.2"
  },
  "description": "DevExtreme provides the CustomStore component to load and edit data from a custom data source. In this demo, the CustomStore fetches data from a custom remote server and displays it in the DataGrid.\nThe communication between the CustomStore and the server is organized as follows:\n\nThe CustomStore sends data processing settings to the server (see the load function in the code below).\nThe server applies these settings to data and returns the processed dataset (you should write the server-side code for this).\n\nEach setting has information about a data operation (sorting, filtering, etc.) and is present only if this operation is declared as remote in the DataGrid's remoteOperations property. If your server does not support a certain operation, do not declare it as remote to perform it on the client.\nFor more information about the communication between the client and server in DevExtreme, refer to the following help topic: Server-Side Data Processing.\nIf your server does not support any data operations, set remoteOperations to false and implement the load function as described in the following help topic: Client-Side Data Processing.\n",
  "name": "custom-data-source-devextreme-data-grid-forked",
  "version": "0.0.2",
  "devDependencies": {
    "react-scripts": "1.0.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject"
  }
}